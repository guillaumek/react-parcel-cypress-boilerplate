// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <React.Fragment>
        <div
          className="container"
        >
          <h1>
            App Starter
          </h1>
          <p>
            Use this document as a way to quickly start any new project.
            <br />
            All you get is this text and a mostly barebones HTML document.
          </p>
        </div>
      </React.Fragment>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="container"
        >
          <h1>
            App Starter
          </h1>
          <p>
            Use this document as a way to quickly start any new project.
            <br />
            All you get is this text and a mostly barebones HTML document.
          </p>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              App Starter
            </h1>,
            <p>
              Use this document as a way to quickly start any new project.
              <br />
              All you get is this text and a mostly barebones HTML document.
            </p>,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "App Starter",
            },
            "ref": null,
            "rendered": "App Starter",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Use this document as a way to quickly start any new project.",
                <br />,
                "All you get is this text and a mostly barebones HTML document.",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Use this document as a way to quickly start any new project.",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              "All you get is this text and a mostly barebones HTML document.",
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <React.Fragment>
          <div
            className="container"
          >
            <h1>
              App Starter
            </h1>
            <p>
              Use this document as a way to quickly start any new project.
              <br />
              All you get is this text and a mostly barebones HTML document.
            </p>
          </div>
        </React.Fragment>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="container"
          >
            <h1>
              App Starter
            </h1>
            <p>
              Use this document as a way to quickly start any new project.
              <br />
              All you get is this text and a mostly barebones HTML document.
            </p>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                App Starter
              </h1>,
              <p>
                Use this document as a way to quickly start any new project.
                <br />
                All you get is this text and a mostly barebones HTML document.
              </p>,
            ],
            "className": "container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "App Starter",
              },
              "ref": null,
              "rendered": "App Starter",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Use this document as a way to quickly start any new project.",
                  <br />,
                  "All you get is this text and a mostly barebones HTML document.",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Use this document as a way to quickly start any new project.",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                "All you get is this text and a mostly barebones HTML document.",
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        "type": Symbol(react.fragment),
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
